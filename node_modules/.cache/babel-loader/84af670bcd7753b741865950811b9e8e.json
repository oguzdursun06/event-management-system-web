{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OGUZHAN\\\\Projects\\\\event-management-system\\\\frontend\\\\ticket_master\\\\src\\\\components\\\\QuestionDialog.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { blue } from '@material-ui/core/colors';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBIcon, MDBInput } from 'mdbreact';\nimport { Container } from '@material-ui/core';\n\nfunction QuestionSimpleDialog(props) {\n  const {\n    onClose,\n    open,\n    name,\n    eventId\n  } = props;\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  let handleSubmit = async event => {\n    event.preventDefault();\n    let emptyItem = {\n      askingPerson: name,\n      eventId: eventId,\n      question: title\n    };\n    await fetch(`/api/questions`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(emptyItem)\n    });\n    handleListItemClick('addAccount');\n  };\n\n  const [title, setTitle] = useState('');\n  return /*#__PURE__*/React.createElement(Dialog, {\n    \"aria-labelledby\": \"simple-dialog-title\",\n    fullWidth: \"200px\",\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"simple-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"h4 text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Etkinlik ba\\u015Flad\\u0131, sorular\\u0131n\\u0131z\\u0131 buradan sorabilirsiniz.\"), /*#__PURE__*/React.createElement(MDBInput, {\n    onChange: event => setTitle(event.target.value),\n    type: \"textarea\",\n    rows: \"4\",\n    cols: \"1\",\n    label: \"Sor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MDBBtn, {\n    outline: true,\n    color: \"secondary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"G\\xF6nder\", /*#__PURE__*/React.createElement(MDBIcon, {\n    far: true,\n    icon: \"paper-plane\",\n    className: \"ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(ListItem, {\n    autoFocus: true,\n    button: true,\n    onClick: () => handleListItemClick('addAccount'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CancelIcon, {\n    color: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Kapat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }))));\n}\n\nQuestionSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired\n};\nexport default function SimpleDialogDemo(props) {\n  const name = props.name;\n  const eventId = props.eventId;\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, \"Soru sorabilirsiniz\"), /*#__PURE__*/React.createElement(QuestionSimpleDialog, {\n    open: open,\n    onClose: handleClose,\n    name: name,\n    eventId: eventId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/OGUZHAN/Projects/event-management-system/frontend/ticket_master/src/components/QuestionDialog.js"],"names":["React","useState","PropTypes","makeStyles","Button","Avatar","List","ListItem","ListItemAvatar","ListItemText","DialogTitle","Dialog","PersonIcon","CancelIcon","blue","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBIcon","MDBInput","Container","QuestionSimpleDialog","props","onClose","open","name","eventId","handleListItemClick","value","handleSubmit","event","preventDefault","emptyItem","askingPerson","question","title","fetch","method","headers","body","JSON","stringify","setTitle","target","propTypes","func","isRequired","bool","SimpleDialogDemo","setOpen","handleClickOpen","handleClose"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBIcon, MDBInput } from 'mdbreact';\r\nimport { Container } from '@material-ui/core';\r\n\r\nfunction QuestionSimpleDialog(props) {\r\n  const { onClose, open,name,eventId} = props;\r\n  const handleListItemClick = (value) => {\r\n    onClose(value);\r\n  };\r\n  \r\n  let handleSubmit = async(event) => {\r\n      event.preventDefault();\r\n      let emptyItem = {\r\n          askingPerson: name,\r\n          eventId: eventId,\r\n          question: title,\r\n      };\r\n      await fetch(`/api/questions`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(emptyItem)\r\n    }); \r\n    handleListItemClick('addAccount')\r\n\r\n  }\r\n  const [title, setTitle] = useState('')\r\n  return (\r\n    \r\n    <Dialog aria-labelledby=\"simple-dialog-title\" fullWidth=\"200px\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\"></DialogTitle>       \r\n      <List>\r\n<Container>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <p className=\"h4 text-center mb-4\">Etkinlik başladı, sorularınızı buradan sorabilirsiniz.</p>\r\n          <MDBInput onChange={event => setTitle(event.target.value)} type=\"textarea\" rows=\"4\" cols=\"1\" label=\"Sor\" />\r\n          <MDBBtn outline color=\"secondary\" type=\"submit\"> \r\n            Gönder\r\n            <MDBIcon far icon=\"paper-plane\" className=\"ml-1\" />\r\n          </MDBBtn>\r\n\r\n      </form>\r\n\r\n  </Container>\r\n\r\n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n          <CancelIcon color=\"blue\"/>\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Kapat\" />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nQuestionSimpleDialog.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default function SimpleDialogDemo(props) {\r\n  const name = props.name;\r\n  const eventId = props.eventId;\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Soru sorabilirsiniz\r\n      </Button>\r\n      <QuestionSimpleDialog open={open} onClose={handleClose} name={name} eventId={eventId}/>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}