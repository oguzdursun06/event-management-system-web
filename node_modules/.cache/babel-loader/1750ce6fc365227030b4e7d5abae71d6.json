{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OGUZHAN\\\\Projects\\\\event-management-system\\\\frontend\\\\ticket_master\\\\src\\\\components\\\\EditEvent.js\";\nimport React, { Component } from 'react';\nimport { Container, Input, Button, Label, Form, FormGroup } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport DatePicker from 'react-datepicker';\nimport { MdEventAvailable } from 'react-icons/md';\nimport { FcCalendar, FcQuestions } from 'react-icons/fc';\nimport Moment from 'moment';\nimport Header from './Header';\nimport SuccessMessage from './SuccessMessage';\nimport ErrorMessage from './ErrorMessage';\n\nclass EditEvent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    this.state = {\n      id: '',\n      name: '',\n      start_event_date: null,\n      finish_event_date: null,\n      capacity: 0,\n      category: \"\",\n      person_count: 0,\n      alertMessage: \"\"\n    };\n    this.handleStartDateChange = this.handleStartDateChange.bind(this);\n    this.handleFinishDateChange = this.handleFinishDateChange.bind(this);\n    this.loadEvent = this.loadEvent.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const item = this.state;\n    var currentDate = Moment().format(\"YYYY-MM-DD\");\n\n    if (item.name.length < 2) {\n      this.setState({\n        alertMessage: \"nameError\"\n      });\n    } else if (currentDate > Moment(item.start_event_date, \"llll\").format('YYYY-MM-DD')) {\n      this.setState({\n        alertMessage: \"startDateError\"\n      });\n    } else if (currentDate > Moment(item.finish_event_date, \"llll\").format('YYYY-MM-DD')) {\n      this.setState({\n        alertMessage: \"finishDateError\"\n      });\n    } else if (Moment(item.start_event_date, \"llll\").format('YYYY-MM-DD') > Moment(item.finish_event_date, \"llll\").format('YYYY-MM-DD')) {\n      this.setState({\n        alertMessage: \"dateError\"\n      });\n    } else if (item.start_event_date == null || item.finish_event_date == null) {\n      this.setState({\n        alertMessage: \"emptyDateError\"\n      });\n    } else {\n      await fetch('/api/event/' + this.state.id, {\n        method: 'PUT',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(item)\n      });\n      this.props.history.push(\"/admin\");\n    }\n  }\n\n  componentDidMount() {\n    this.loadEvent();\n  }\n\n  handleStartDateChange(date) {\n    this.setState({\n      start_event_date: date\n    });\n  }\n\n  handleFinishDateChange(date) {\n    this.setState({\n      finish_event_date: date\n    });\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    let item = { ...this.state\n    };\n    item[name] = value;\n    this.setState({\n      name: item[name]\n    });\n  }\n\n  async loadEvent() {\n    const response = await fetch('/api/event/' + window.localStorage.getItem(\"eventId\"));\n\n    try {\n      const event = await response.json();\n      this.setState({\n        id: event.id,\n        category: event.category,\n        capacity: event.capacity,\n        person_count: event.person_count\n      });\n    } catch (err) {}\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"landing-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }), this.state.alertMessage.includes(\"success\") ? /*#__PURE__*/React.createElement(SuccessMessage, {\n      title: this.state.alertMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 64\n      }\n    }) : null, this.state.alertMessage.includes(\"Error\") ? /*#__PURE__*/React.createElement(ErrorMessage, {\n      title: this.state.alertMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 62\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-style-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 27\n      }\n    }, \"Etkinlik d\\xFCzenle\"), /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, \" \", /*#__PURE__*/React.createElement(MdEventAvailable, {\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 44\n      }\n    }), \" Etkinlik ad\\u0131 \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 91\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      autoComplete: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"event_date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FcCalendar, {\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 49\n      }\n    }), \" Etkinlik ba\\u015Flang\\u0131\\xE7 tarihi \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 102\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.start_event_date,\n      onChange: this.handleStartDateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"event_date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(FcCalendar, {\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 50\n      }\n    }), \" Etkinlik biti\\u015F tarihi \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 99\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.finish_event_date,\n      onChange: this.handleFinishDateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"example_f\",\n      align: \"center\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 89\n      }\n    }, \"De\\u011Fi\\u015Ftir\"))), /*#__PURE__*/React.createElement(Button, {\n      color: \"white\",\n      tag: Link,\n      to: \"/admin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, \"Cancel\")))))));\n  }\n\n}\n\nexport default EditEvent;","map":{"version":3,"sources":["C:/Users/OGUZHAN/Projects/event-management-system/frontend/ticket_master/src/components/EditEvent.js"],"names":["React","Component","Container","Input","Button","Label","Form","FormGroup","Link","DatePicker","MdEventAvailable","FcCalendar","FcQuestions","Moment","Header","SuccessMessage","ErrorMessage","EditEvent","constructor","props","onChange","e","setState","target","name","value","state","id","start_event_date","finish_event_date","capacity","category","person_count","alertMessage","handleStartDateChange","bind","handleFinishDateChange","loadEvent","handleSubmit","handleChange","event","preventDefault","item","currentDate","format","length","fetch","method","headers","body","JSON","stringify","history","push","componentDidMount","date","response","window","localStorage","getItem","json","err","render","includes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Input, Button, Label, Form, FormGroup } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport DatePicker from 'react-datepicker';\r\nimport {MdEventAvailable} from 'react-icons/md'\r\nimport {FcCalendar, FcQuestions} from 'react-icons/fc'\r\nimport Moment from 'moment';\r\nimport Header from './Header';\r\nimport SuccessMessage from './SuccessMessage';\r\nimport ErrorMessage from './ErrorMessage';\r\nclass EditEvent extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            id: '',\r\n            name: '',\r\n            start_event_date: null,\r\n            finish_event_date: null,\r\n            capacity: 0,\r\n            category: \"\",\r\n            person_count: 0,\r\n            alertMessage: \"\",\r\n        }\r\n        this.handleStartDateChange = this.handleStartDateChange.bind(this);\r\n        this.handleFinishDateChange = this.handleFinishDateChange.bind(this);\r\n        this.loadEvent = this.loadEvent.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        const item = this.state;\r\n        var currentDate = Moment().format(\"YYYY-MM-DD\");\r\n        if(item.name.length < 2){\r\n            this.setState({alertMessage: \"nameError\"});\r\n        }\r\n       \r\n        else if(currentDate > Moment(item.start_event_date,\"llll\").format('YYYY-MM-DD')){\r\n            this.setState({alertMessage: \"startDateError\"});\r\n        }\r\n\r\n        else if(currentDate > Moment(item.finish_event_date,\"llll\").format('YYYY-MM-DD')){\r\n            this.setState({alertMessage: \"finishDateError\"});\r\n        }\r\n        else if( Moment(item.start_event_date,\"llll\").format('YYYY-MM-DD') > Moment(item.finish_event_date,\"llll\").format('YYYY-MM-DD')){\r\n            this.setState({alertMessage: \"dateError\"});\r\n        }\r\n        else if(item.start_event_date == null || item.finish_event_date == null){\r\n            this.setState({alertMessage: \"emptyDateError\"});\r\n        }\r\n     \r\n\r\n        else{\r\n            await fetch('/api/event/'+ this.state.id, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(item)\r\n            });\r\n            \r\n            this.props.history.push(\"/admin\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n        \r\n\r\n    componentDidMount() {\r\n        this.loadEvent();\r\n    }\r\n\r\n    handleStartDateChange(date) {\r\n        this.setState({ start_event_date: date });\r\n    }\r\n\r\n    handleFinishDateChange(date) {\r\n        this.setState({ finish_event_date: date });\r\n    }\r\n\r\n    handleChange(event){\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        let item = {...this.state};\r\n        item[name] = value; \r\n        this.setState({ name: item[name] });\r\n    }\r\n    async loadEvent() {\r\n        const response = await fetch('/api/event/' + window.localStorage.getItem(\"eventId\"));\r\n        try{\r\n        const event = await response.json();\r\n        this.setState({\r\n            id: event.id,\r\n            category: event.category,\r\n            capacity: event.capacity,\r\n            person_count: event.person_count\r\n        });\r\n        }\r\n        catch(err){\r\n\r\n        }\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"landing-grid\">\r\n                <Header />\r\n                <Container>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                {this.state.alertMessage.includes(\"success\") ? <SuccessMessage title={this.state.alertMessage}/> : null}\r\n                {this.state.alertMessage.includes(\"Error\") ? <ErrorMessage title={this.state.alertMessage}/> : null}\r\n                <div class=\"form-style-3\">\r\n                <Form onSubmit={this.handleSubmit}>\r\n                   \r\n                <fieldset><legend>Etkinlik düzenle</legend>\r\n                        <Label for=\"name\"> <MdEventAvailable color=\"blue\" /> Etkinlik adı <span className=\"required\">*</span></Label>\r\n                        <input type=\"text\" name=\"name\" id=\"name\" value={this.state.name}\r\n                                onChange={this.handleChange} autoComplete=\"name\" />\r\n                 \r\n                        <br/>\r\n                        <Label for=\"event_date\"><FcCalendar color=\"blue\"/> Etkinlik başlangıç tarihi <span className=\"required\">*</span></Label>\r\n                        <DatePicker selected={this.state.start_event_date} onChange={this.handleStartDateChange}/>\r\n               \r\n                         <br/>    \r\n                         <Label for=\"event_date\"><FcCalendar color=\"blue\"/> Etkinlik bitiş tarihi <span className=\"required\">*</span></Label>\r\n                        <DatePicker selected={this.state.finish_event_date} onChange={this.handleFinishDateChange}/>\r\n               \r\n                         <br/>    \r\n                       \r\n                        <button><div className=\"example_f\" align=\"center\" type=\"submit\"><span>Değiştir</span></div></button>\r\n                        <Button color=\"white\" tag={Link} to=\"/admin\">Cancel</Button>\r\n\r\n                        \r\n                    </fieldset>\r\n\r\n                </Form>\r\n                </div>\r\n            </Container>\r\n            </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditEvent;"]},"metadata":{},"sourceType":"module"}